// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SICOBIM_B.Data;

namespace SICOBIM_B.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200807015544_ej_09")]
    partial class ej_09
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SICOBIM_B.Entities.CatArea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("area")
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idusuarioMod")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioAlta")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatArea");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatEstadoDelBien", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("estado")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatEstadoDelBien");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatEstatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("estatus")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatEstatus");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatGarantia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("añosGarantia")
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatGarantia");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatPermiso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("permiso")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatPermiso");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatRol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("idusuarioMod")
                        .HasColumnType("integer");

                    b.Property<string>("rol")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("CatRol");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatServicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idusuarioMod")
                        .HasColumnType("integer");

                    b.Property<string>("servicio")
                        .HasColumnType("text");

                    b.Property<int>("usuarioAlta")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatServicio");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatSexo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("sexo")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatSexo");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTipoContrato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("contrato")
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTipoContrato");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTipoDeBien", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TipodeBien")
                        .HasColumnType("text");

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTipoDeBien");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTipoEntrada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("tipoentrada")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTipoEntrada");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTipoPartida", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("partida")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTipoPartida");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTipoSalida", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("tiposalida")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTipoSalida");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatTurno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("turno")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatTurno");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.CatUnidadDestino", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("destino")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("idusuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("CatUnidadDestino");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblAreaServicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<int?>("catareaid")
                        .HasColumnType("integer");

                    b.Property<int?>("catservicioid")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idarea")
                        .HasColumnType("integer");

                    b.Property<int>("idservicio")
                        .HasColumnType("integer");

                    b.Property<string>("localizacion")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("catareaid");

                    b.HasIndex("catservicioid");

                    b.ToTable("TblAreaServicio");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblBienes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("IVA")
                        .HasColumnType("double precision");

                    b.Property<int?>("TblBienesid")
                        .HasColumnType("integer");

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<int?>("catEstadoDelBienid")
                        .HasColumnType("integer");

                    b.Property<int?>("catGarantiaid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTipoDeBienesid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTipoEntradaid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTipoPartidaid")
                        .HasColumnType("integer");

                    b.Property<int?>("catUnidadDestinoid")
                        .HasColumnType("integer");

                    b.Property<string>("claveCambs")
                        .HasColumnType("text");

                    b.Property<string>("claveSaica")
                        .HasColumnType("text");

                    b.Property<string>("contrato")
                        .HasColumnType("text");

                    b.Property<double>("costoTotal")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idAñosGarantia")
                        .HasColumnType("integer");

                    b.Property<int>("idEstadoFisico")
                        .HasColumnType("integer");

                    b.Property<int>("idFactura")
                        .HasColumnType("integer");

                    b.Property<int>("idResguardatario")
                        .HasColumnType("integer");

                    b.Property<int>("idServicio")
                        .HasColumnType("integer");

                    b.Property<int>("idTipoBien")
                        .HasColumnType("integer");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("identrada")
                        .HasColumnType("integer");

                    b.Property<int>("idtipopartida")
                        .HasColumnType("integer");

                    b.Property<int>("idunidaddestino")
                        .HasColumnType("integer");

                    b.Property<string>("marca")
                        .HasColumnType("text");

                    b.Property<string>("modelo")
                        .HasColumnType("text");

                    b.Property<int>("numeroInventario")
                        .HasColumnType("integer");

                    b.Property<int>("numerofederalizacion")
                        .HasColumnType("integer");

                    b.Property<string>("observaciones")
                        .HasColumnType("text");

                    b.Property<string>("proveedor")
                        .HasColumnType("text");

                    b.Property<string>("serie")
                        .HasColumnType("text");

                    b.Property<double>("subtotal")
                        .HasColumnType("double precision");

                    b.Property<int?>("tblAreaServicioid")
                        .HasColumnType("integer");

                    b.Property<int?>("tblFacturasid")
                        .HasColumnType("integer");

                    b.Property<int?>("tblInventariosid")
                        .HasColumnType("integer");

                    b.Property<int?>("tblResguardatariosid")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("TblBienesid");

                    b.HasIndex("catEstadoDelBienid");

                    b.HasIndex("catGarantiaid");

                    b.HasIndex("catTipoDeBienesid");

                    b.HasIndex("catTipoEntradaid");

                    b.HasIndex("catTipoPartidaid");

                    b.HasIndex("catUnidadDestinoid");

                    b.HasIndex("tblAreaServicioid");

                    b.HasIndex("tblFacturasid");

                    b.HasIndex("tblInventariosid");

                    b.HasIndex("tblResguardatariosid");

                    b.ToTable("TblBienes");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblConfPerfil", b =>
                {
                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("idPermiso")
                        .HasColumnType("integer");

                    b.Property<int?>("idRol")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasIndex("idPermiso");

                    b.HasIndex("idRol");

                    b.ToTable("TblConfPerfil");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblFacturas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("facturas")
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("TblFacturas");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblInventarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NumeroInventario")
                        .HasColumnType("text");

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("TblInventarios");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblResguardatarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CatServicioid")
                        .HasColumnType("integer");

                    b.Property<string>("RFC")
                        .HasColumnType("text");

                    b.Property<int?>("TblAreaServicioid")
                        .HasColumnType("integer");

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("apellidoDos")
                        .HasColumnType("text");

                    b.Property<string>("apellidoUno")
                        .HasColumnType("text");

                    b.Property<string>("cargo")
                        .HasColumnType("text");

                    b.Property<int?>("catEstatusid")
                        .HasColumnType("integer");

                    b.Property<int?>("catSexoid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTipoContratoid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTurnoid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idEstatus")
                        .HasColumnType("integer");

                    b.Property<int>("idServicio")
                        .HasColumnType("integer");

                    b.Property<int>("idSexo")
                        .HasColumnType("integer");

                    b.Property<int>("idTipoContrato")
                        .HasColumnType("integer");

                    b.Property<int>("idTurno")
                        .HasColumnType("integer");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("numeroempleado")
                        .HasColumnType("text");

                    b.Property<string>("plaza")
                        .HasColumnType("text");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("CatServicioid");

                    b.HasIndex("TblAreaServicioid");

                    b.HasIndex("catEstatusid");

                    b.HasIndex("catSexoid");

                    b.HasIndex("catTipoContratoid");

                    b.HasIndex("catTurnoid");

                    b.ToTable("TblResguardatarios");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblSalidaBien", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<int?>("catTipoSalidaid")
                        .HasColumnType("integer");

                    b.Property<int?>("catUnidadDestinoid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("idbien")
                        .HasColumnType("integer");

                    b.Property<int>("idtiposalida")
                        .HasColumnType("integer");

                    b.Property<int>("idunidaddestino")
                        .HasColumnType("integer");

                    b.Property<int?>("tblbienesid")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("catTipoSalidaid");

                    b.HasIndex("catUnidadDestinoid");

                    b.HasIndex("tblbienesid");

                    b.ToTable("TblSalidaBien");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CatTipoDeBienid")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("RFC")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<bool>("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("cargo")
                        .HasColumnType("text");

                    b.Property<int?>("catEstatusid")
                        .HasColumnType("integer");

                    b.Property<int?>("catSexoid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTipoContratoid")
                        .HasColumnType("integer");

                    b.Property<int?>("catTurnoid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fechaMod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("idServicio")
                        .HasColumnType("integer");

                    b.Property<int>("idSexo")
                        .HasColumnType("integer");

                    b.Property<int>("idTok")
                        .HasColumnType("integer");

                    b.Property<int>("idUsuarioAlta")
                        .HasColumnType("integer");

                    b.Property<int>("idestatus")
                        .HasColumnType("integer");

                    b.Property<int>("idrol")
                        .HasColumnType("integer");

                    b.Property<int>("idtipocontrato")
                        .HasColumnType("integer");

                    b.Property<int>("idturno")
                        .HasColumnType("integer");

                    b.Property<string>("numeroempleado")
                        .HasColumnType("text");

                    b.Property<string>("plaza")
                        .HasColumnType("text");

                    b.Property<int?>("tblAreaServicioid")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioMod")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("CatTipoDeBienid");

                    b.HasIndex("catEstatusid");

                    b.HasIndex("catSexoid");

                    b.HasIndex("catTipoContratoid");

                    b.HasIndex("catTurnoid");

                    b.HasIndex("tblAreaServicioid");

                    b.ToTable("CtrlUsuarios");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblAreaServicio", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.CatArea", "catarea")
                        .WithMany()
                        .HasForeignKey("catareaid");

                    b.HasOne("SICOBIM_B.Entities.CatServicio", "catservicio")
                        .WithMany("tblAreaServicios")
                        .HasForeignKey("catservicioid");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblBienes", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.TblBienes", null)
                        .WithMany("tblBienes")
                        .HasForeignKey("TblBienesid");

                    b.HasOne("SICOBIM_B.Entities.CatEstadoDelBien", "catEstadoDelBien")
                        .WithMany("tblBienes")
                        .HasForeignKey("catEstadoDelBienid");

                    b.HasOne("SICOBIM_B.Entities.CatGarantia", "catGarantia")
                        .WithMany("tblBienes")
                        .HasForeignKey("catGarantiaid");

                    b.HasOne("SICOBIM_B.Entities.CatTipoDeBien", "catTipoDeBienes")
                        .WithMany("tblBienes")
                        .HasForeignKey("catTipoDeBienesid");

                    b.HasOne("SICOBIM_B.Entities.CatTipoEntrada", "catTipoEntrada")
                        .WithMany("tblBienes")
                        .HasForeignKey("catTipoEntradaid");

                    b.HasOne("SICOBIM_B.Entities.CatTipoPartida", "catTipoPartida")
                        .WithMany("tblBienes")
                        .HasForeignKey("catTipoPartidaid");

                    b.HasOne("SICOBIM_B.Entities.CatUnidadDestino", "catUnidadDestino")
                        .WithMany("tblBienes")
                        .HasForeignKey("catUnidadDestinoid");

                    b.HasOne("SICOBIM_B.Entities.TblAreaServicio", "tblAreaServicio")
                        .WithMany("tblBienes")
                        .HasForeignKey("tblAreaServicioid");

                    b.HasOne("SICOBIM_B.Entities.TblFacturas", "tblFacturas")
                        .WithMany("tblBienes")
                        .HasForeignKey("tblFacturasid");

                    b.HasOne("SICOBIM_B.Entities.TblInventarios", "tblInventarios")
                        .WithMany("tblBieness")
                        .HasForeignKey("tblInventariosid");

                    b.HasOne("SICOBIM_B.Entities.TblResguardatarios", "tblResguardatarios")
                        .WithMany("tblBienes")
                        .HasForeignKey("tblResguardatariosid");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblConfPerfil", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.CatPermiso", "CatPermiso")
                        .WithMany()
                        .HasForeignKey("idPermiso");

                    b.HasOne("SICOBIM_B.Entities.CatRol", "CatRol")
                        .WithMany()
                        .HasForeignKey("idRol");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblResguardatarios", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.CatServicio", "CatServicio")
                        .WithMany()
                        .HasForeignKey("CatServicioid");

                    b.HasOne("SICOBIM_B.Entities.TblAreaServicio", null)
                        .WithMany("tblResguardatarios")
                        .HasForeignKey("TblAreaServicioid");

                    b.HasOne("SICOBIM_B.Entities.CatEstatus", "catEstatus")
                        .WithMany("tblResguardatarios")
                        .HasForeignKey("catEstatusid");

                    b.HasOne("SICOBIM_B.Entities.CatSexo", "catSexo")
                        .WithMany("tblResguardatarios")
                        .HasForeignKey("catSexoid");

                    b.HasOne("SICOBIM_B.Entities.CatTipoContrato", "catTipoContrato")
                        .WithMany("tblResguardatarios")
                        .HasForeignKey("catTipoContratoid");

                    b.HasOne("SICOBIM_B.Entities.CatTurno", "catTurno")
                        .WithMany("tblResguardatarios")
                        .HasForeignKey("catTurnoid");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.TblSalidaBien", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.CatTipoSalida", "catTipoSalida")
                        .WithMany("tblsalidaBien")
                        .HasForeignKey("catTipoSalidaid");

                    b.HasOne("SICOBIM_B.Entities.CatUnidadDestino", "catUnidadDestino")
                        .WithMany("tblsalidaBien")
                        .HasForeignKey("catUnidadDestinoid");

                    b.HasOne("SICOBIM_B.Entities.TblBienes", "tblbienes")
                        .WithMany()
                        .HasForeignKey("tblbienesid");
                });

            modelBuilder.Entity("SICOBIM_B.Entities.User", b =>
                {
                    b.HasOne("SICOBIM_B.Entities.CatTipoDeBien", null)
                        .WithMany("users")
                        .HasForeignKey("CatTipoDeBienid");

                    b.HasOne("SICOBIM_B.Entities.CatEstatus", "catEstatus")
                        .WithMany("users")
                        .HasForeignKey("catEstatusid");

                    b.HasOne("SICOBIM_B.Entities.CatSexo", "catSexo")
                        .WithMany("users")
                        .HasForeignKey("catSexoid");

                    b.HasOne("SICOBIM_B.Entities.CatTipoContrato", "catTipoContrato")
                        .WithMany("users")
                        .HasForeignKey("catTipoContratoid");

                    b.HasOne("SICOBIM_B.Entities.CatTurno", "catTurno")
                        .WithMany("users")
                        .HasForeignKey("catTurnoid");

                    b.HasOne("SICOBIM_B.Entities.TblAreaServicio", "tblAreaServicio")
                        .WithMany("users")
                        .HasForeignKey("tblAreaServicioid");

                    b.OwnsMany("SICOBIM_B.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("text");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("text");

                            b1.Property<string>("Token")
                                .HasColumnType("text");

                            b1.Property<int>("Userid")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("Userid");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("Userid");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
